stages:
  - pre-build
  - build
  - check

include:
  - remote: https://gitlab.com/renovate-bot/renovate-runner/-/raw/v17.200.1/templates/renovate.gitlab-ci.yml
  - remote: https://gitlab.com/renovate-bot/renovate-runner/-/raw/v17.200.1/templates/renovate-config-validator.gitlab-ci.yml

.base:
  before_script:
    - set -euo pipefail
  tags:
    - d13-runner

.php:
  image: "$TWINT_SDK_PHP_IMAGE_BASE-$PHP_VERSION"
  parallel:
    matrix:
      - { PHP_VERSION: &php_version [ "8.1", "8.2", "8.3" ] }
  extends: .base

.php-with-high-low-dependencies:
  parallel:
    matrix:
      - { PHP_VERSION: *php_version, COMPOSER_DEPENDENCY_VERSION: [ "current", "lowest", "highest" ] }
  extends: .php

container-build-hash:
  stage: pre-build
  image: "alpine:3@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b"
  script:
    - apk add --no-cache make
    - make container-checksum
  extends: .base
  artifacts:
    reports:
      dotenv: .docker-env

container-build:
  stage: build
  image: "quay.io/podman/stable:v5@sha256:b291b026d1a8fa5ae7fce5ce02cd1b89c2b5953b7982e24ddcc1c0d0980add01"
  variables:
    TWINT_SDK_PHP_IMAGE_CACHE: $CI_REGISTRY_IMAGE/php
    # Required to make rootless podman work
    STORAGE_DRIVER: vfs
  script:
    - podman login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - podman login -u "$DOCKER_USER" -p "$DOCKER_TOKEN" docker.io
    - >-
      podman build
      --pull=newer
      --build-context php_base_image=docker-image://php:$PHP_VERSION-alpine
      --cache-from $TWINT_SDK_PHP_IMAGE_CACHE
      --cache-to $TWINT_SDK_PHP_IMAGE_CACHE
      --label "org.opencontainers.image.title=$CI_PROJECT_TITLE"
      --label "org.opencontainers.image.url=$CI_PROJECT_URL"
      --label "org.opencontainers.image.created=$CI_JOB_STARTED_AT"
      --label "org.opencontainers.image.revision=$CI_COMMIT_SHA"
      --label "org.opencontainers.image.version=$CI_COMMIT_REF_NAME"
      --tag $TWINT_SDK_PHP_IMAGE_BASE-$PHP_VERSION
      -f Dockerfile
      $PWD
    - podman push $TWINT_SDK_PHP_IMAGE_BASE-$PHP_VERSION
  extends: .php
  needs:
    - job: container-build-hash
      artifacts: true
  only:
    changes:
      - composer.lock
      - Dockerfile
      - .gitlab-ci.yml
      - Makefile

docs:
  stage: build
  image: sphinxdoc/sphinx:7.3.7@sha256:ae9daafd366af9b6caf6ab3ef67c8787cd977c0543d9f7f793bd254f46385515
  script:
    - mkdir -p build
    - make docs
    - cp -r build/docs/html docs
  extends: .base
  needs: []
  artifacts:
    name: "Documentation"
    paths:
      - docs/**/*

check:
  stage: check
  variables:
    XDEBUG_MODE: coverage
    COMPOSER_ALLOW_SUPERUSER: "true"
  services:
    - name: "wiremock/wiremock:3x@sha256:6e9dcfd84cbec2daa7b12f4797a7e7d8f75b5c381df70ed00d2744c4de5360a4"
      alias: wiremock
  script:
    - cp ${TWINT_SDK_CI_DOT_ENV} .env
    - mkdir -p build
    - cat ${TWINT_SDK_CI_CERT} | base64 -d > build/certificate.p12
    - make install
    - make wiremock-setup
    - make check
  extends: .php-with-high-low-dependencies
  coverage: '/Lines:\s+\d+(?:\.\d+)?%/'
  artifacts:
    reports:
      # Needs GitLab 14.10
      #coverage: build/coverage/clover.xml
      junit: build/junit.xml
      codequality:
        - build/phpstan-src.json
        # See https://gitlab.com/gitlab-org/gitlab/-/issues/351546
        #- build/phpstan-docs.json
  needs:
    - job: container-build-hash
      artifacts: true
    - job: container-build
      optional: true
      artifacts: false

renovate:
  variables:
    RENOVATE_EXTRA_FLAGS: "$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  stage: build
  tags:
    - d13-runner
  needs: []

renovate-config-validator:
  variables:
    RENOVATE_CONFIG_VALIDATOR_EXTRA_FLAGS: "--strict"
  stage: check
  tags:
    - d13-runner
  needs: []
